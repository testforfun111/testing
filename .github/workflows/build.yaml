name: CI

on:
  push:
    branches:
      - main  # Change this to your default branch
  pull_request:
    branches:
      - main  # Change this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: TestTestTest
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456789
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Build
        run: dotnet publish WinFormApp1/WinFormApp1/WinFormApp1.csproj -c Release -o srcPublish

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: srcPublish

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    if: success()  # This job will run only if the build job is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Run Unit Tests
        run: dotnet test WinFormApp2/UnitTests.csproj

      - name: Save unit test results
        run: echo "${{ job.status }}" > ./allure-results/tests.res

      - name: Upload unit test results
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: ./allure-results

  integrational-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: success()  # This job will run only if the unit-tests job is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Read Unit Test Results
        id: read_results
        run: |
          UNIT_TESTS_RESULT=$(cat ./allure-results/tests.res)
          echo "UNIT TESTS RESULT: $UNIT_TESTS_RESULT"
          echo "::set-output name=skip::$(if [ \"$UNIT_TESTS_RESULT\" = \"success\" ]; then echo false; else echo true; fi)"

      - name: Run Integration Tests
        run: dotnet test IntegrationTest/IntegrationTest.csproj --environment skip=${{ steps.read_results.outputs.skip }}

      - name: Save integration test results
        run: echo "${{ job.status }}" > ./allure-results/tests.res

      - name: Upload integration test results
        uses: actions/upload-artifact@v2
        with:
          name: integration-test-results
          path: ./allure-results

  e2e-tests:
    runs-on: ubuntu-latest
    needs: integrational-tests
    if: success()  # This job will run only if the integrational-tests job is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Read Integration Test Results
        id: read_results
        run: |
          ITESTS_RESULT=$(cat ./allure-results/tests.res)
          echo "INTEGRATIONAL TESTS RESULT: $ITESTS_RESULT"
          echo "::set-output name=skip::$(if [ \"$ITESTS_RESULT\" = \"success\" ]; then echo false; else echo true; fi)"

      - name: Run E2E Tests
        run: dotnet test E2E/E2E.csproj --environment skip=${{ steps.read_results.outputs.skip }}

      - name: Save E2E test results
        run: echo "${{ job.status }}" > ./allure-results/tests.res

      - name: Upload E2E test results
        uses: actions/upload-artifact@v2
        with:
          name: e2e-test-results
          path: ./allure-results